---
- name: Tomcat - Retrieve Tomcat user informations.
  getent:
    database: "passwd"
    key: "{{ icescrum_tomcat_user }}"

- name: Tomcat - Retrieve icescrum_tomcat_catalina_base value.
  set_fact:
    icescrum_tomcat_home: "{{ getent_passwd[icescrum_tomcat_user][4] }}"

- name: Tomcat - Ensure icescrum configuration is linked in tomcat.
  file:
    src: "{{ icescrum_install_dir }}/.icescrum"
    dest: "{{ icescrum_tomcat_home }}/.icescrum"
    owner: "{{ icescrum_tomcat_user }}"
    group: "{{ icescrum_group }}"
    state: link

- name: Tomcat - Ensure tomcat-jdbc.jar is absent (see https://www.icescrum.com/documentation/application-server/#application-server_1).
  file:
    path: "{{ icescrum_tomcat_catalina_base }}/lib/tomcat-jdbc.jar"
    state: absent

- name: Tomcat - Retrieve icescrum group members.
  getent:
    database: group
    key: "{{ icescrum_group }}"

- name: Tomcat - Ensure tomcat user is in the icescrum group.
  user:
    name: "{{ icescrum_tomcat_user }}"
    groups: "{{ icescrum_group }}"
  when: not icescrum_tomcat_user in getent_group['{{ icescrum_group }}'][2]

- name: Tomcat - Ensure Catalina home and webapps ownership.
  file:
    path: "{{ item }}"
    owner: "{{ icescrum_tomcat_user }}"
    recurse: yes
  with_items:
  - "{{ icescrum_tomcat_catalina_base }}/webapps"
  - "{{ icescrum_tomcat_catalina_home }}"

- name: Tomcat - Ensure icescrum link into Catalina base is present.
  file:
    src: "{{ icescrum_install_dir }}/icescrum.war"
    dest: "{{ icescrum_tomcat_catalina_base }}/webapps/icescrum.war"
    owner: "{{ icescrum_tomcat_user }}"
    group: "{{ icescrum_group }}"
    mode: 0550
    state: link

- name: Tomcat - Ensure icescrum war is deployed.
  stat:
    path: "{{ icescrum_tomcat_catalina_base }}/webapps/icescrum/WEB-INF/web.xml"
  register: icescrum_web

- name: Tomcat - Ensure setenv.sh is present.
  template:
    src: 'setenv.sh.j2'
    dest: "{{ icescrum_tomcat_catalina_home }}/bin/setenv.sh"
    mode: 0755
  when: icescrum_tomcat_configure
  register: icescrum_setenv

- name: Tomcat - Ensure server.xml is present.
  template:
    src: 'server.xml.j2'
    dest: "{{ icescrum_tomcat_catalina_base }}/conf/server.xml"
    backup: yes
  when: icescrum_tomcat_configure
  register: icescrum_server_xml

- name: Tomcat - Ensure icescrum is linked in tomcat.
  file:
    src: "{{ icescrum_install_dir }}"
    dest: "{{ icescrum_tomcat_catalina_base }}/{{ icescrum_context }}"
    owner: "{{ icescrum_tomcat_user }}"
    state: link

- name: Tomcat - Retrieve log files status.
  stat:
    path: "{{ icescrum_log_dir }}/{{ item }}"
  with_items:
    - 'icescrum.log'
    - 'stacktrace.log'
  register: icescrum_log_files

- name: Tomcat - Ensure log files exist.
  file:
    path: "{{ icescrum_log_dir }}/{{ item.item }}"
    state: touch
  when: not item.stat.exists
  with_items: "{{ icescrum_log_files.results }}"

- name: Tomcat - Ensure log files are present.
  file:
    path: "{{ icescrum_log_dir }}/{{ item }}"
    state: file
    mode: 0640
    owner: "{{ icescrum_tomcat_user }}"
    group: "{{ icescrum_tomcat_user }}"
  with_items:
    - 'icescrum.log'
    - 'stacktrace.log'
  register: icescrum_log_files_presence

- name: Tomcat - Restart if needed.
  service:
    name: "{{ icescrum_tomcat_name }}"
    state: restarted
  when: not icescrum_web.stat.exists or
        icescrum_setenv.changed or
        icescrum_config_groovy.changed or
        icescrum_server_xml.changed or
        icescrum_log_files_presence.changed

- name: Tomcat - Ensure tomcat service is started.
  service:
    name: "{{ icescrum_tomcat_name }}"
    state: started

- name: Tomcat - Ensure tomcat port is listen.
  wait_for:
    host: localhost
    port: "{{ icescrum_port  | default(8080) }}"
    state: drained
